project(strat3)
cmake_minimum_required(VERSION 2.8.4)
aux_source_directory(. SRC_LIST)

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -O1 -O2 -O3")

set(STRAT3_VERSION_MAJOR 1)
set(STRAT3_VERSION_MINOR 0)

#===============================================================================
#           Boost.Python / Python Configuration
#===============================================================================

# windows
INCLUDE_DIRECTORIES("/cygdrive/c/cygwin/usr/include")
INCLUDE_DIRECTORIES("/cygdrive/c/Anaconda/include")

SET(GTEST_DIR "/cygdrive/c/Users/pastafarian/Dropbox/project/gtest/gtest")

# find boost - Python
find_package(Boost 1.55 REQUIRED
    COMPONENTS
        python)

# compile python bindings
add_library(pyMatrix       SHARED
    "${PROJECT_SOURCE_DIR}/python/Matrix.cpp"
    "${PROJECT_SOURCE_DIR}/DataManager/DataManager.cpp")


# add_library(pyDataManager  SHARED "${PROJECT_SOURCE_DIR}/python/DataManager.cpp")
#add_library(pyPortfolio    SHARED "${PROJECT_SOURCE_DIR}/python/Portfolio.cpp")
#add_library(pyStrategy     SHARED "${PROJECT_SOURCE_DIR}/python/Strategy.cpp")
#add_library(pyDatalog      SHARED "${PROJECT_SOURCE_DIR}/python/DataLog.cpp")

TARGET_LINK_LIBRARIES(pyMatrix       ${Boost_LIBRARIES} )
#TARGET_LINK_LIBRARIES(pyDataManager  ${Boost_LIBRARIES})
#TARGET_LINK_LIBRARIES(pyPortfolio    ${Boost_LIBRARIES})
#TARGET_LINK_LIBRARIES(pyStrategy     ${Boost_LIBRARIES})
#TARGET_LINK_LIBRARIES(pyDatalog      ${Boost_LIBRARIES})

#===============================================================================
#           gtest Configuration
#===============================================================================

# Compile the gtest suite
include_directories(${GTEST_DIR})
add_library(gtest "${GTEST_DIR}/src/gtest-all.cc")

#===============================================================================
#           Project Source
#===============================================================================

# includes
include_directories(
    "${GTEST_DIR}/include"
    "${PROJECT_SOURCE_DIR}/DataManager"
    "${PROJECT_SOURCE_DIR}/Portfolio"
    "${PROJECT_SOURCE_DIR}/Strategy"
    "${PROJECT_SOURCE_DIR}/DataLog"
    "${PROJECT_SOURCE_DIR}/test"
)

# Sources
aux_source_directory( "${PROJECT_SOURCE_DIR}/DataManager"   SRC_LIST )
aux_source_directory( "${PROJECT_SOURCE_DIR}/Portfolio"     SRC_LIST )
aux_source_directory( "${PROJECT_SOURCE_DIR}/Strategy"      SRC_LIST )
aux_source_directory( "${PROJECT_SOURCE_DIR}/DataLog"       SRC_LIST )

# project internal libraries
add_library(DataManager "${PROJECT_SOURCE_DIR}/DataManager/DataManager.cpp")
add_library(Portfolio
    "${PROJECT_SOURCE_DIR}/Portfolio/Portfolio.cpp"
    "${PROJECT_SOURCE_DIR}/Portfolio/Transaction.cpp"
    "${PROJECT_SOURCE_DIR}/Portfolio/MarketEngine.cpp"
    "${PROJECT_SOURCE_DIR}/Portfolio/TransactionAnswer.cpp")

add_library(Strategy "${PROJECT_SOURCE_DIR}/Strategy/Strategy.cpp")
add_library(Datalog "${PROJECT_SOURCE_DIR}/DataLog/DataLog.cpp")

#===============================================================================
#           Compiling
#===============================================================================

# link compiled libraries : including gtest
link_directories(${PROJECT_BINARY_DIR})

# executable and linking
add_executable(tests "${PROJECT_SOURCE_DIR}/test/main_test.cpp" ${SRC_LIST})
target_link_libraries(tests -isystem libgtest.a -pthread)
